{"version":3,"sources":["InputGroup.js","TankerPart.js","App.js","serviceWorker.js","index.js"],"names":["src_InputGroup","props","text","id","value","handleChange","md","as","react_default","a","createElement","InputGroup","className","Prepend","Text","concat","FormControl","name","aria-label","aria-describedby","onChange","autoComplete","TankerPart","data","disabled","substance","water","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","weight","density","waterLit","waterPct","part1","part2","part3","fill1","fill2","fill3","total","sum","totalVolume","ratioMulti","error","flash","bind","assertThisInitialized","onSave","change","_this$state","capacity","substanceVolume","requiredVolume","diff","toFixed","totalSubstance","maxWeight","Math","floor","fill","round","setState","e","_this2","target","defineProperty","calc","_this3","JSON","parse","localStorage","getItem","objectSpread","_this$state2","stringify","setItem","_this4","setTimeout","_this$state3","Container","Alert","variant","Row","Col","Button","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81d31748.chunk.js","sourcesContent":["import React from 'react';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nexport default function(props) {\r\n   const {text, id, value, handleChange, md, as} = props;\r\n   return (\r\n   <InputGroup as={as} md={md} className=\"mb-3\">\r\n      <InputGroup.Prepend>\r\n         <InputGroup.Text id={`${id}-label`}>{text}</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n         id={id}\r\n         name={id}\r\n         aria-label={text}\r\n         aria-describedby={`${id}-label`}\r\n         value={value}\r\n         onChange={handleChange}\r\n         autoComplete=\"off\"\r\n      />\r\n   </InputGroup>\r\n   )\r\n}","import React from 'react';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nexport default function(props) {\r\n   const {text, id, value, handleChange, data, disabled} = props;\r\n   return (\r\n   <InputGroup className=\"mb-3\">\r\n      <InputGroup.Prepend>\r\n         <InputGroup.Text id={`${id}-label`}>{text}</InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n         name={id}\r\n         aria-label={text}\r\n         aria-describedby={`${id}-label`}\r\n         value={value}\r\n         onChange={handleChange}\r\n         disabled={disabled}\r\n         autoComplete=\"off\"\r\n      />\r\n      <FormControl\r\n         name=\"substance\"\r\n         aria-label={text}\r\n         aria-describedby={`${id}-label`}\r\n         value={data.substance}\r\n         disabled\r\n      />\r\n      <FormControl\r\n         name=\"water\"\r\n         aria-label={text}\r\n         aria-describedby={`${id}-label`}\r\n         value={data.water}\r\n         disabled\r\n      />\r\n   </InputGroup>\r\n   );\r\n};","import React, { Component } from 'react';\nimport { Button, Alert, Container, Row, Col } from 'react-bootstrap';\nimport InputGroup from './InputGroup';\nimport TankerPart from './TankerPart';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      weight: '28000',\n      density: '1.4',\n      waterLit: '2800',\n      waterPct: '0',\n\n      part1: '8600',\n      part2: '5600',\n      part3: '9600',\n\n      fill1: {substance:0, water:0},\n      fill2: {substance:0, water:0},\n      fill3: {substance:0, water:0},\n      total: {sum:0, substance:0, water:0},\n\n      totalVolume: 0,\n      ratioMulti: 0,\n\n      error: null,\n      flash: null\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSave = this.onSave.bind(this);\n  };\n\n  calc(change){\n    let {weight, density, waterPct, waterLit, part1, part2, part3, error} = this.state;\n    const capacity = +part1 + +part2 + +part3;\n    const fill1 = {substance:0, water:0};\n    const fill2 = {substance:0, water:0};\n    const fill3 = {substance:0, water:0};\n\n    if (change === 'waterLit') waterPct = +weight / +waterLit;\n    else if (change === 'waterPct' || change === 'weight') waterLit = +weight / 100 * +waterPct;\n    const substanceWeight = +weight - +waterLit;\n    const substanceVolume = substanceWeight / +density;\n    const totalVolume = substanceVolume + +waterLit;\n    const ratioMulti = totalVolume / substanceVolume;\n    let requiredVolume = totalVolume;\n\n    if (totalVolume > capacity) {\n      const diff = (totalVolume - capacity).toFixed(2);\n      const totalSubstance = capacity / ratioMulti;\n      const maxWeight = Math.floor(capacity - totalSubstance + totalSubstance * density);\n      error = `Max capacity exceeded by ${diff} liter. Maximum weight is ${maxWeight} kg`;\n    } else if (error) error = null;\n\n    let fill = requiredVolume < +part1 ? requiredVolume : +part1;\n    requiredVolume = requiredVolume - fill;\n    fill1.substance = Math.round(fill / ratioMulti);\n    fill1.water = Math.round(fill - fill1.substance);\n    \n    fill = requiredVolume < +part2 ? requiredVolume : +part2;\n    requiredVolume = requiredVolume - fill;\n    fill2.substance = Math.round(fill / ratioMulti);\n    fill2.water = Math.round(fill - fill2.substance);\n\n    fill = requiredVolume < +part3 ? requiredVolume : +part3;\n    requiredVolume = requiredVolume - fill;\n    fill3.substance = Math.round(fill / ratioMulti);\n    fill3.water = Math.round(fill - fill3.substance);\n\n    const total = {\n      sum: Math.round(totalVolume),\n      substance: fill1.substance + fill2.substance + fill3.substance , \n      water: fill1.water + fill2.water + fill3.water\n    };\n\n    this.setState({waterPct, waterLit, totalVolume, ratioMulti, fill1, fill2,fill3, total, error});\n  };\n\n  onChange(e) {\n    const name = e.target.name;\n    this.setState({[name]: e.target.value}, ()=>this.calc(name));\n  };\n\n  componentWillMount() {\n    const data = JSON.parse(localStorage.getItem('data'));\n    this.setState({...this.state, ...data}, ()=>this.calc('waterLit'));\n  }\n\n  onSave() {\n    const {weight, density, waterLit, part1, part2, part3} = this.state;\n    const data = JSON.stringify({weight, density, waterLit, part1, part2, part3});\n    localStorage.setItem('data', data);\n    this.setState({flash: 'Saved!'}, function(){\n      setTimeout(() => this.setState({flash: null}), 1000)\n    })\n  }\n\n  render() {\n    const { weight, density, waterLit, waterPct, \n      part1, part2, part3, fill1, fill2, fill3,\n      total, error, flash\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">Tanker Calc</header>\n        <Container className=\"App-main w-100\">\n          {error && (<Alert variant=\"danger\">{error}</Alert>)}\n          <Row>\n            <InputGroup as={Col} md={6} id=\"weight\" text=\"Weight\" value={weight} handleChange={this.onChange} />\n            <InputGroup as={Col} md={6} id=\"density\" text=\"Density\" value={density} handleChange={this.onChange} />\n            <InputGroup as={Col} md={6} id=\"waterLit\" text=\"Water (lit)\" value={waterLit} handleChange={this.onChange} />\n            <InputGroup as={Col} md={6} id=\"waterPct\" text=\"Water (%)\" value={waterPct} handleChange={this.onChange} />\n          </Row>\n            <fieldset>\n              <legend>Tanker Volume</legend>\n                <TankerPart text=\"1\" id=\"part1\" value={part1} data={fill1} handleChange={this.onChange} />\n                <TankerPart text=\"2\" id=\"part2\" value={part2} data={fill2} handleChange={this.onChange} />\n                <TankerPart text=\"3\" id=\"part3\" value={part3} data={fill3} handleChange={this.onChange} />\n                <TankerPart text=\"total\" id=\"total\" value={total.sum} data={total} disabled />\n            </fieldset>\n            <Button variant=\"primary\" onClick={this.onSave}>Save State</Button>\n            {flash && (<Alert className=\"w-25 mx-auto\" variant=\"success\">{flash}</Alert>)}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}